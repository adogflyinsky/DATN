/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Question1,
  Question1Interface,
} from "../../../contracts/chess_questions/Question1";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "piece",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "index",
            type: "uint8",
          },
        ],
        internalType: "struct Chess.chess[]",
        name: "trueAnswer",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "answer",
        type: "uint256",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "piece",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "index",
            type: "uint8",
          },
        ],
        internalType: "struct Chess.chess[]",
        name: "answer",
        type: "tuple[]",
      },
    ],
    name: "solve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106e8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80637284e41614610046578063b0db5c5014610064578063e75e440914610094575b600080fd5b61004e6100c4565b60405161005b9190610212565b60405180910390f35b61007e6004803603810190610079919061041e565b6100e4565b60405161008b9190610480565b60405180910390f35b6100ae60048036038101906100a991906104c7565b61016d565b6040516100bb919061053e565b60405180910390f35b606060405180608001604052806044815260200161066f60449139905090565b600080825190506000805b828110156101625784818151811061010a57610109610559565b5b60200260200101516020015185828151811061012957610128610559565b5b60200260200101516000015161013f91906105b7565b60ff168261014d91906105f2565b9150808061015a90610626565b9150506100ef565b508092505050919050565b600081610179846100e4565b14905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101bc5780820151818401526020810190506101a1565b60008484015250505050565b6000601f19601f8301169050919050565b60006101e482610182565b6101ee818561018d565b93506101fe81856020860161019e565b610207816101c8565b840191505092915050565b6000602082019050818103600083015261022c81846101d9565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610285826101c8565b810181811067ffffffffffffffff821117156102a4576102a361024d565b5b80604052505050565b60006102b7610234565b90506102c3828261027c565b919050565b600067ffffffffffffffff8211156102e3576102e261024d565b5b602082029050602081019050919050565b600080fd5b600080fd5b600060ff82169050919050565b610314816102fe565b811461031f57600080fd5b50565b6000813590506103318161030b565b92915050565b60006040828403121561034d5761034c6102f9565b5b61035760406102ad565b9050600061036784828501610322565b600083015250602061037b84828501610322565b60208301525092915050565b600061039a610395846102c8565b6102ad565b905080838252602082019050604084028301858111156103bd576103bc6102f4565b5b835b818110156103e657806103d28882610337565b8452602084019350506040810190506103bf565b5050509392505050565b600082601f83011261040557610404610248565b5b8135610415848260208601610387565b91505092915050565b6000602082840312156104345761043361023e565b5b600082013567ffffffffffffffff81111561045257610451610243565b5b61045e848285016103f0565b91505092915050565b6000819050919050565b61047a81610467565b82525050565b60006020820190506104956000830184610471565b92915050565b6104a481610467565b81146104af57600080fd5b50565b6000813590506104c18161049b565b92915050565b600080604083850312156104de576104dd61023e565b5b600083013567ffffffffffffffff8111156104fc576104fb610243565b5b610508858286016103f0565b9250506020610519858286016104b2565b9150509250929050565b60008115159050919050565b61053881610523565b82525050565b6000602082019050610553600083018461052f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105c2826102fe565b91506105cd836102fe565b92508160ff04831182151516156105e7576105e6610588565b5b828202905092915050565b60006105fd82610467565b915061060883610467565b92508282019050808211156106205761061f610588565b5b92915050565b600061063182610467565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361066357610662610588565b5b60018201905091905056fe536f6c76696e67207175657374696f6e2062792063616c63756c6174652073756d206f662028696e646578202a20706f736974696f6e29206f66207069656365732e202ea26469706673582212209e2934c4343290e1755563b010bdf52dc089d8bc16e77cf0d5bb5dbd5f8bce4064736f6c63430008100033";

type Question1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Question1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Question1__factory extends ContractFactory {
  constructor(...args: Question1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Question1> {
    return super.deploy(overrides || {}) as Promise<Question1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Question1 {
    return super.attach(address) as Question1;
  }
  override connect(signer: Signer): Question1__factory {
    return super.connect(signer) as Question1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Question1Interface {
    return new utils.Interface(_abi) as Question1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Question1 {
    return new Contract(address, _abi, signerOrProvider) as Question1;
  }
}
